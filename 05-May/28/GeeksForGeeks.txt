Find rectangle with corners as 1
_______________________________________________________

class Solution {
    public boolean ValidCorner(int mat[][]) {
        int n = mat.length;
        int m = mat[0].length;

        // Iterate over all pairs of rows
        for (int row1 = 0; row1 < n - 1; row1++) {
            for (int row2 = row1 + 1; row2 < n; row2++) {

                // Keep track of columns where both rows have 1s
                int count = 0;

                for (int col = 0; col < m; col++) {
                    // Check if both rows have 1 at this column
                    if (mat[row1][col] == 1 && mat[row2][col] == 1) {
                        // If we already found one such column before, rectangle exists
                        if (count > 0) {
                            return true;
                        }
                        count++;
                    }
                }
            }
        }
        return false;
    }
}

_______________________________________________________





Problem Statement : 
Given an n x m binary matrix mat[][] containing only 0s and 1s, determine if there exists a rectangle within the matrix such that all four corners of the rectangle are 1. If such a rectangle exists, return true; otherwise, return false.





Approach :
Iterate over pairs of rows.
For each pair of rows, check which columns have 1 in both rows.
If at any time, for a given pair of rows, you find two or more columns that both rows have 1s, you found a rectangle.




Complexity : 
Time Complexity : O(n^2 * m)
Space Complexity : O(1)