326. Power of Three
________________________________________________________

class Solution {
     public boolean isPowerOfThree(int n) {
        while(n>=3){
            if(n%3!=0) return false;
            n/=3;
        }
        return n==1;
    }
}
________________________________________________________



Problem Statement : 
Given an integer n, return true if it is a power of three. Otherwise, return false.

An integer n is a power of three, if there exists an integer x such that n == 3x.




Approach : 
If ( n \leq 0 ), return false since negative numbers and zero are not powers of three.
Repeatedly divide ( n ) by 3 as long as it is divisible.
If the final value is 1, return true; otherwise, return false.





Complexity : 
Time Complexity : O(log3(n)) 
Space Complexity : O(1)