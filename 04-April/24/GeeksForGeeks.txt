Unique Number III
_______________________________________________________

class Solution {
    public int getSingle(int[] arr) {
        int result = 0;

        for (int i = 0; i < 32; i++) {
            int sum = 0;
            int x = (1 << i);
            for (int num : arr) {
                if ((num & x) != 0) {
                    sum++;
                }
            }
            if (sum % 3 != 0) {
                result |= x;
            }
        }

        return result;
    }
}

_______________________________________________________
Given an array of integers arr[] where, every element appears thrice except for one which occurs once.
Find that element which occurs once.



Approach :
Initialize an integer variable result = 0.

Loop through all 32 bits (assuming 32-bit integers).

For each bit position i (0 to 31):
Count the number of elements in the array that have the i-th bit set.

If the count of bits set at position i is not a multiple of 3:
That means the unique number has a 1 at that bit.
Set the i-th bit in the result.

Return the final result.



Complexity :
Time Complexity : O(N)
Space Complexity : O(1)
