1863. Sum of All Subset XOR Totals
________________________________________________________

class Solution {
    public int subsetXORSum(int[] nums) {
        int n = nums.length;
        int total = 0;
        int totalSubsets = (int)Math.pow(2, n); 

        for (int i = 0; i < totalSubsets; i++) {
            int xor = 0;
            for (int j = 0; j < n; j++) {
                if (((i >> j) & 1) == 1) {
                    xor ^= nums[j];
                }
            }
            total += xor;
        }

        return total;
    }
}

_______________________________________________________


Problem Statement :
The XOR total of an array is defined as the bitwise XOR of all its elements, or 0 if the array is empty.
Given an array nums, return the sum of all XOR totals for every subset of nums. 
Note: Subsets with the same elements should be counted multiple times.
An array a is a subset of an array b if a can be obtained from b by deleting some (possibly zero) elements of b.



Approach:
Generate all subsets of the array
Calculate the XOR of each subset
Return the total sum of all subset XORs


Complexity :
Time Complexity : O(n^2)
Space Complexity : O(1)