2200. Find All K-Distant Indices in an Array
________________________________________________________

class Solution {
    public List<Integer> findKDistantIndices(int[] nums, int key, int k) {
        List<Integer> res = new ArrayList<>();
        int r = 0;
        int n = nums.length;
        for (int j = 0; j < n; ++j) {
            if (nums[j] == key) {
                int l = Math.max(r, j - k);
                r = Math.min(n - 1, j + k) + 1;
                for (int i = l; i < r; ++i) {
                    res.add(i);
                }
            }
        }
        return res;
    }
}
________________________________________________________




Problem Statement :
You are given a 0-indexed integer array nums and two integers key and k. A k-distant index is an index i of nums for which there exists at least one index j such that |i - j| <= k and nums[j] == key.

Return a list of all k-distant indices sorted in increasing order.





Approach :
Initialize res = [] and a pointer r = 0.

Traverse the array.

When you find nums[j] == key:
Compute the interval [max(j-k, r), min(j+k, n-1)].
Add all indices in this interval to res.
Update r = min(j+k+1, n) to avoid re-adding same indices.

Return res.





Complexity : 
Time Complexity : O(n)
Space Complexity : O(1)